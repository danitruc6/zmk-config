/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&kscan0 {
    debounce-period = <20>;
};

/ {
    macros {
        pw_macro: pw_macro {
            label = "ZM_PW";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp X &kp W &kp E &kp N5 &kp N6 &kp N3 &kp N4 &kp EXCL>
                ;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp QMARK>;
        };
        
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };
        
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTLTB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |SFTENT|
//                    |GUALT| LWR | SPC |   | SHFT| RSE  | LGR |
            bindings = <
   &kp ESC       &kp Q &kp W &kp E         &kp R &kp T       &kp Y     &kp U  &kp I     &kp O   &kp P  &kp BSPC
   &mt LCTRL TAB &kp A &kp S &kp D         &kp F &kp G       &kp H     &kp J  &kp K     &kp L   &td2   &td1
   &kp LSHFT     &kp Z &kp X &kp C         &kp V &kp B       &kp N     &kp M  &kp COMMA &kp DOT &td0   &mt RSHFT ENTER
                             &mt LALT LGUI &mo 1 &kp SPACE   &kp RSHFT &mo 2  &kp LG(RIGHT)
            >;
        };
        
        lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | TAB  | LCA | PTR | DEL | LCF | HOME|   | LFT | DWN |  UP | RGT |VOLUP|      |
// | CAPS | LCZ | LCX | LCC | LCV | END |   |     | MCO | PWR | LGL |VOLDW| MUTE |
//                    | LGUI|     |     |   |     |     | ALT |
            bindings = <
   &kp F2     &kp N1    &kp N2        &kp N3    &kp N4    &kp N5         &kp N6    &kp N7       &kp N8     &kp N9     &kp N0            &trans
   &kp TAB    &kp LC(A) &kp LG(LS(S)) &kp DEL   &kp LC(F) &kp HOME       &kp LEFT  &kp DOWN     &kp UP     &kp RIGHT  &kp C_VOL_UP      &kp PSCRN
   &kp CAPS   &kp LC(Z) &kp LC(X)     &kp LC(C) &kp LC(V) &kp END        &trans    &pw_macro    &kp K_PWR  &kp LG(L)  &kp C_VOLUME_DOWN &kp C_MUTE
                        &kp LGUI  &trans    &trans                       &trans    &mo 3        &kp LG(LEFT)
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  |GRAVE|  |   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                     | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &kp GRAVE &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR  &kp BSPC
   &kp F1    &kp F2    &kp F3  &kp F4    &kp F5    &kp F6      &kp MINUS &kp EQUAL &kp LBRC  &kp RBRC &kp GRAVE &kp PIPE
   &kp F7    &kp F8    &kp F9  &kp F10   &kp F11   &kp F12     &kp UNDER &kp PLUS  &kp LBKT  &kp RBKT &kp BSLH  &kp TILDE
                               &trans    &mo 3     &trans      &trans    &trans    &kp LG(DOWN)
            >;
        };
        
        adjust_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  {  |  }  | "|" |  `   |
// |      |     |     |     | RST | BOOT|   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans            &trans  &trans  &trans   &trans  &trans  &trans 
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &trans  &trans  &trans   &trans  &trans  &trans 
   &trans     &trans       &trans       &trans       &sys_reset   &bootloader       &trans  &trans  &trans   &trans  &trans  &trans 
                                        &trans       &trans       &trans            &trans  &trans  &trans 
            >;
        };
    };
};
